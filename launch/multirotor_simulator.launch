<launch>

  <arg name="UAV_TYPE" default="$(env UAV_TYPE)"/>

  <arg name="uav_name" default="$(env UAV_NAME)"/>

  <arg name="debug" default="false" />
  <arg name="standalone" default="true" />
  <arg name="use_sim_time" default="true" />

  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="standalone" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet" value="load" />
  <arg     if="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="" />
  <arg unless="$(eval arg('standalone') or arg('debug'))" name="nodelet_manager" value="$(arg UAV_NAME)_nodelet_manager" />

  <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />

  <group if="$(arg use_sim_time)">
    <param name="/use_sim_time" value="true" />
  </group>

  <group ns="$(arg uav_name)">

    <node pkg="nodelet" type="nodelet" name="multirotor_simulator" args="$(arg nodelet) mrs_multirotor_simulator/MultirotorSimulator $(arg nodelet_manager)" output="screen" launch-prefix="$(arg launch_prefix)">

      <rosparam file="$(find mrs_multirotor_simulator)/config/multirotor_simulator.yaml" />
      <rosparam file="$(find mrs_multirotor_simulator)/config/uavs/$(arg UAV_TYPE).yaml" />

      <rosparam file="$(find mrs_multirotor_simulator)/config/controllers/mixer.yaml" />
      <rosparam file="$(find mrs_multirotor_simulator)/config/controllers/rate_controller.yaml" />

      <remap from="~imu_out" to="~imu" />
      <remap from="~odom_out" to="~odom" />
      <remap from="~clock_out" to="/clock" />

      <remap from="~rate_cmd_in" to="~rate_cmd" />

    </node>

  </group>

</launch>
